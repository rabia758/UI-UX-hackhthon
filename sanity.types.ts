/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Products = {
  _id: string;
  _type: "products";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  price?: number;
  slug?: Slug;
  description?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  category?: "tshirt" | "short" | "jeans" | "hoodie" | "shirt";
  discount?: number;
  isNew?: boolean;
  colors?: Array<string>;
  sizes?: Array<string>;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type AllSanitySchemaTypes = SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityFileAsset | Geopoint | Products | SanityImageCrop | SanityImageHotspot | SanityImageAsset | SanityAssetSourceData | SanityImageMetadata | Slug;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./sanity/lib/quires.ts
// Variable: allProducts
// Query: *[_type == "products"]{      _id,      name,      price,      slug,      description,      "image": image.asset->url,      category,      discountPercent,      isNew,      colors,      sizes    }
export type AllProductsResult = Array<{
  _id: string;
  name: string | null;
  price: number | null;
  slug: Slug | null;
  description: string | null;
  image: string | null;
  category: "hoodie" | "jeans" | "shirt" | "short" | "tshirt" | null;
  discountPercent: null;
  isNew: boolean | null;
  colors: Array<string> | null;
  sizes: Array<string> | null;
}>;
// Variable: arrivals
// Query: *[_type == "products"][0..3]{      _id,      name,      price,      slug,      description,      "image": image.asset->url,      category,      discountPercent,      isNew,      colors,      sizes    }
export type ArrivalsResult = Array<{
  _id: string;
  name: string | null;
  price: number | null;
  slug: Slug | null;
  description: string | null;
  image: string | null;
  category: "hoodie" | "jeans" | "shirt" | "short" | "tshirt" | null;
  discountPercent: null;
  isNew: boolean | null;
  colors: Array<string> | null;
  sizes: Array<string> | null;
}>;
// Variable: selling
// Query: *[_type == "products"][4..7]{      _id,      name,      price,      slug,      description,      "image": image.asset->url,      category,      discountPercent,      isNew,      colors,      sizes    }
export type SellingResult = Array<{
  _id: string;
  name: string | null;
  price: number | null;
  slug: Slug | null;
  description: string | null;
  image: string | null;
  category: "hoodie" | "jeans" | "shirt" | "short" | "tshirt" | null;
  discountPercent: null;
  isNew: boolean | null;
  colors: Array<string> | null;
  sizes: Array<string> | null;
}>;
// Variable: ItemQuery
// Query: *[_type == "products" && category == "tshirt"]{  _id,      name,      price,      slug,      description,      "image": image.asset->url,      category,      discountPercent,      isNew,      colors,      sizes}
export type ItemQueryResult = Array<{
  _id: string;
  name: string | null;
  price: number | null;
  slug: Slug | null;
  description: string | null;
  image: string | null;
  category: "hoodie" | "jeans" | "shirt" | "short" | "tshirt" | null;
  discountPercent: null;
  isNew: boolean | null;
  colors: Array<string> | null;
  sizes: Array<string> | null;
}>;
// Variable: FirstQuery
// Query: *[_type == "products" && category == "jeans"]{  _id,      name,      price,      slug,      description,      "image": image.asset->url,      category,      discountPercent,      isNew,      colors,      sizes}
export type FirstQueryResult = Array<{
  _id: string;
  name: string | null;
  price: number | null;
  slug: Slug | null;
  description: string | null;
  image: string | null;
  category: "hoodie" | "jeans" | "shirt" | "short" | "tshirt" | null;
  discountPercent: null;
  isNew: boolean | null;
  colors: Array<string> | null;
  sizes: Array<string> | null;
}>;
// Variable: SecondQuery
// Query: *[_type == "products" && category == "hoodie"]{  _id,      name,      price,      slug,      description,      "image": image.asset->url,      category,      discountPercent,      isNew,      colors,      sizes}
export type SecondQueryResult = Array<{
  _id: string;
  name: string | null;
  price: number | null;
  slug: Slug | null;
  description: string | null;
  image: string | null;
  category: "hoodie" | "jeans" | "shirt" | "short" | "tshirt" | null;
  discountPercent: null;
  isNew: boolean | null;
  colors: Array<string> | null;
  sizes: Array<string> | null;
}>;
// Variable: ThirdQuery
// Query: *[_type == "products" && category == "shirt"]{  _id,      name,      price,      slug,      description,      "image": image.asset->url,      category,      discountPercent,      isNew,      colors,      sizes}
export type ThirdQueryResult = Array<{
  _id: string;
  name: string | null;
  price: number | null;
  slug: Slug | null;
  description: string | null;
  image: string | null;
  category: "hoodie" | "jeans" | "shirt" | "short" | "tshirt" | null;
  discountPercent: null;
  isNew: boolean | null;
  colors: Array<string> | null;
  sizes: Array<string> | null;
}>;
// Variable: PRODUCTS_QUERY
// Query: *[_type=="products"] | order(name asc)
export type PRODUCTS_QUERYResult = Array<{
  _id: string;
  _type: "products";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  price?: number;
  slug?: Slug;
  description?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  category?: "hoodie" | "jeans" | "shirt" | "short" | "tshirt";
  discount?: number;
  isNew?: boolean;
  colors?: Array<string>;
  sizes?: Array<string>;
}>;

// Source: ./app/search/page.tsx
// Variable: PRODUCT_SEARCH_QUERY
// Query: *[_type == "products" && name match $searchParam] | order(name asc)
export type PRODUCT_SEARCH_QUERYResult = Array<{
  _id: string;
  _type: "products";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  price?: number;
  slug?: Slug;
  description?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  category?: "hoodie" | "jeans" | "shirt" | "short" | "tshirt";
  discount?: number;
  isNew?: boolean;
  colors?: Array<string>;
  sizes?: Array<string>;
}>;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    "*[_type == \"products\"]{\n      _id,\n      name,\n      price,\n      slug,\n      description,\n      \"image\": image.asset->url,\n      category,\n      discountPercent,\n      isNew,\n      colors,\n      sizes\n    }": AllProductsResult;
    "*[_type == \"products\"][0..3]{\n      _id,\n      name,\n      price,\n      slug,\n      description,\n      \"image\": image.asset->url,\n      category,\n      discountPercent,\n      isNew,\n      colors,\n      sizes\n    }": ArrivalsResult;
    "*[_type == \"products\"][4..7]{\n      _id,\n      name,\n      price,\n      slug,\n      description,\n      \"image\": image.asset->url,\n      category,\n      discountPercent,\n      isNew,\n      colors,\n      sizes\n    }": SellingResult;
    "*[_type == \"products\" && category == \"tshirt\"]{\n  _id,\n      name,\n      price,\n      slug,\n      description,\n      \"image\": image.asset->url,\n      category,\n      discountPercent,\n      isNew,\n      colors,\n      sizes\n}": ItemQueryResult;
    "*[_type == \"products\" && category == \"jeans\"]{\n  _id,\n      name,\n      price,\n      slug,\n      description,\n      \"image\": image.asset->url,\n      category,\n      discountPercent,\n      isNew,\n      colors,\n      sizes\n}": FirstQueryResult;
    "*[_type == \"products\" && category == \"hoodie\"]{\n  _id,\n      name,\n      price,\n      slug,\n      description,\n      \"image\": image.asset->url,\n      category,\n      discountPercent,\n      isNew,\n      colors,\n      sizes\n}": SecondQueryResult;
    "*[_type == \"products\" && category == \"shirt\"]{\n  _id,\n      name,\n      price,\n      slug,\n      description,\n      \"image\": image.asset->url,\n      category,\n      discountPercent,\n      isNew,\n      colors,\n      sizes\n}": ThirdQueryResult;
    "*[_type==\"products\"] | order(name asc)": PRODUCTS_QUERYResult;
    "*[_type == \"products\" && name match $searchParam] | order(name asc)": PRODUCT_SEARCH_QUERYResult;
  }
}
